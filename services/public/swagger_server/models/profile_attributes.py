# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.profile_attributes_settings import ProfileAttributesSettings  # noqa: F401,E501
from swagger_server import util


class ProfileAttributes(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, name: str=None, container: str=None, settings: List[ProfileAttributesSettings]=None):  # noqa: E501
        """ProfileAttributes - a model defined in Swagger

        :param name: The name of this ProfileAttributes.  # noqa: E501
        :type name: str
        :param container: The container of this ProfileAttributes.  # noqa: E501
        :type container: str
        :param settings: The settings of this ProfileAttributes.  # noqa: E501
        :type settings: List[ProfileAttributesSettings]
        """
        self.swagger_types = {
            'name': str,
            'container': str,
            'settings': List[ProfileAttributesSettings]
        }

        self.attribute_map = {
            'name': 'name',
            'container': 'container',
            'settings': 'settings'
        }
        self._name = name
        self._container = container
        self._settings = settings

    @classmethod
    def from_dict(cls, dikt) -> 'ProfileAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Profile_attributes of this ProfileAttributes.  # noqa: E501
        :rtype: ProfileAttributes
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this ProfileAttributes.


        :return: The name of this ProfileAttributes.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this ProfileAttributes.


        :param name: The name of this ProfileAttributes.
        :type name: str
        """

        self._name = name

    @property
    def container(self) -> str:
        """Gets the container of this ProfileAttributes.


        :return: The container of this ProfileAttributes.
        :rtype: str
        """
        return self._container

    @container.setter
    def container(self, container: str):
        """Sets the container of this ProfileAttributes.


        :param container: The container of this ProfileAttributes.
        :type container: str
        """

        self._container = container

    @property
    def settings(self) -> List[ProfileAttributesSettings]:
        """Gets the settings of this ProfileAttributes.


        :return: The settings of this ProfileAttributes.
        :rtype: List[ProfileAttributesSettings]
        """
        return self._settings

    @settings.setter
    def settings(self, settings: List[ProfileAttributesSettings]):
        """Sets the settings of this ProfileAttributes.


        :param settings: The settings of this ProfileAttributes.
        :type settings: List[ProfileAttributesSettings]
        """

        self._settings = settings
